version: 2
jobs:
    run_tests:
      docker:
        - image: circleci/python:3.6.8-stretch
      steps:
        - checkout

        - run:
            name: Set BASH_ENV
            command: |
              echo "set -e" >> $BASH_ENV;
              echo "export OPENBLAS_NUM_THREADS=4" >> $BASH_ENV;
              # echo "export DISPLAY=:99" >> $BASH_ENV;
              echo "shopt -s globstar" >> $BASH_ENV;  # Enable recursive globbing via **

        - restore_cache:
            keys:
              - pip-cache-0

        - restore_cache:
            keys:
              - data-cache-1

        - run:
            name: Get conda running
            command: |
              wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -O ~/miniforge.sh;
              chmod +x ~/miniforge.sh;
              ~/miniforge.sh -b -p ~/miniforge;
              echo "export PATH=~/miniforge/bin:$PATH" >> $BASH_ENV;

        - run:
            name: Install dependencies in conda base environment
            command: |
              conda update -n base -c defaults conda;
              conda install -y -n base -c defaults pip
              pip install -r tests/requirements.txt

        # - run:
        #     name: Spin up Xvfb
        #     command: |
        #       /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;

        # https://github.com/ContinuumIO/anaconda-issues/issues/9190#issuecomment-386508136
        # https://github.com/golemfactory/golem/issues/1019
        # - run:
        #     name: Install PyQt5 dependencies
        #     command: |
        #       sudo apt-get install libxkbcommon-x11-0

        # - run:
        #     name: Install 3D dependencies
        #     command: |
        #       pip install --user --upgrade --progress-bar off vtk
        #       pip install --user --upgrade --progress-bar off mayavi
        #       pip install --user --upgrade --progress-bar off PySurfer[save_movie]

        - run:
            name: Install datalad to conveniently pull testing datasets
            command: |
              conda install datalad
              git config --global user.email "user@mne.com"
              git config --global user.name "mne user"

        # Save Python cache
        - save_cache:
            key: pip-cache-0
            paths:
              - ~/.cache/pip

        # Look at what we have and fail early if there is some library conflict
        - run:
            name: Check installation
            command: |
               which python
               git-annex version
               datalad --version
               mne_bids --version
               mne --version
               python -c "import mne; mne.sys_info()"

        # Setup for report
        - run:
            name: Setup report
            command: |
               mkdir ~/reports

        # Run tests
        - run:
            name: test ds000246
            command: |
               export DS=ds000246
               python tests/run_tests.py ${DS}
               mkdir ~/reports/${DS}
               cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.html ~/reports/${DS}/
               cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.tsv ~/reports/${DS}/
               rm -rf ~/mne_data/${DS}/derivatives/mne-study-template/

        # - run:
        #     name: test ds000248
        #     command: |
        #        export DS=ds000248
        #        python tests/run_tests.py ${DS}
        #        mkdir ~/reports/${DS}
        #        cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.html ~/reports/${DS}/
        #        cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.json ~/reports/${DS}/
        #        cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.tsv ~/reports/${DS}/
        #        rm -rf ~/mne_data/${DS}/derivatives/mne-study-template/

        # - run:
        #     name: test ds000248_ica
        #     command: |
        #         export DS=ds000248_ica
        #         python tests/run_tests.py ${DS}
        #         mkdir ~/reports/${DS}
        #         cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.html ~/reports/${DS}/
        #         cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.tsv ~/reports/${DS}/
        #         rm -rf ~/mne_data/${DS}/derivatives/mne-study-template/

        - run:
            name: test ds001810
            command: |
               export DS=ds001810
               python tests/run_tests.py ${DS}
               mkdir ~/reports/${DS}
               cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.html ~/reports/${DS}/
               rm -rf ~/mne_data/${DS}/derivatives/mne-study-template/

        - run:
            name: test eeg_matchingpennies
            command: |
               export DS=eeg_matchingpennies
               python tests/run_tests.py ${DS}
               mkdir ~/reports/${DS}
               cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.html ~/reports/${DS}/
               rm -rf ~/mne_data/${DS}/derivatives/mne-study-template/

        - run:
            name: test ds003104
            command: |
               export DS=ds003104
               python tests/run_tests.py ${DS}
               mkdir ~/reports/${DS}
               cp ~/mne_data/${DS}/derivatives/mne-study-template/*/**/*.html ~/reports/${DS}/
               rm -rf ~/mne_data/${DS}/derivatives/mne-study-template/

        - store_artifacts:
            path: /home/circleci/reports
            destination: reports

        - save_cache:
            key: data-cache-1
            paths:
              - ~/mne_data/

    build_docs:
      docker:
        - image: circleci/python:3.6.8-stretch
      steps:
        - checkout

        - run:
            name: Set BASH_ENV
            command: |
              echo "set -e" >> $BASH_ENV;
              echo "export OPENBLAS_NUM_THREADS=4" >> $BASH_ENV;
              # echo "export DISPLAY=:99" >> $BASH_ENV;
              echo "shopt -s globstar" >> $BASH_ENV;  # Enable recursive globbing via **

        - run:
            name: Get conda running
            command: |
              wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -O ~/miniforge.sh;
              chmod +x ~/miniforge.sh;
              ~/miniforge.sh -b -p ~/miniforge;
              echo "export PATH=~/miniforge/bin:$PATH" >> $BASH_ENV;

        - run:
            name: Install dependencies in conda base environment
            command: |
              conda update -n base -c defaults conda
              # Install deps immediately required for doc building
              conda install -y python=3.8 \
                               mkdocs \
                               mkdocs-material \
                               mkdocs-material-extensions \
                               mkdocstrings
              # Install deps required so MkDocs can import config.py
              conda install -y coloredlogs
              pip install mne mne_bids
              cd docs
              mkdocs build
              cd ..

        - store_artifacts:
            path: docs/site
            destination: site

        - persist_to_workspace:  # For documentation deployment to gh-pages
            root: .
            paths: docs/site

    deploy_docs:
      docker:
        - image: node:10

      steps:
        - checkout
        - attach_workspace:
            at: .
        - run:
            name: Install and configure dependencies
            command: |
              npm install -g --silent gh-pages@3.0.0  # Work around https://github.com/tschaub/gh-pages/issues/354
              git config user.email "ci-build@mne.tools"
              git config user.name "ci-build"
        - run:
            name: Deploy docs to gh-pages branch
            command: gh-pages --message "[skip ci] Update docs" --dist docs/site
        - add_ssh_keys:
            fingerprints:
              - "da:49:10:cd:fd:7d:2f:62:7c:78:be:4a:e1:c4:72:6c"
    
workflows:
  version: 2

  commit:
    jobs:
      - run_tests
      - build_docs
      - deploy_docs:
          requires:
            # - run_tests
            - build_docs
          filters:
            branches:
              only: master

  scheduled:
    jobs:
      - run_tests
      - build_docs
      - deploy_docs:
          requires:
            # - run_tests
            - build_docs
  
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
